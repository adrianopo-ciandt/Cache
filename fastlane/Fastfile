# Customize this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.64.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://docs.fastlane.tools/#metrics

before_all do
  echo "Generating Release Notes"
  release_notes = "Cache - "
  release_notes += get_date_code
  release_notes += "\n"

  release_notes += "Commit: "
  release_notes += get_short_commit_number

  release_notes += "Branch: "
  release_notes += get_branch
  release_notes += "\n"

  release_notes += sh "git log `git describe --tags --abbrev=0 HEAD^`..HEAD --format=%s"
  echo "Release Notes: " + release_notes
end

lane :dev do
  # build the release variant
  gradle(task: "clean")
  gradle(task: "generateDevKeys")
  gradle(task: "assembleDevRelease")
  echo "BUILD SUCCESS"

  generate_tag
end

lane :get_date_code do
  Time.new.strftime("%Y%m%d%H%M")
end

lane :get_short_commit_number do
  sh "git rev-parse --short HEAD"
end

lane :get_branch do
  sh "git rev-parse --abbrev-ref HEAD"
end

lane :generate_tag do
  sh "cd .. && chmod -R a+x ferramentas"
  sh "cd .. && ferramentas/tag_generation.sh"
end